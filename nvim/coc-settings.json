{
	// set completeopt=preview
	"suggest.enablePreview": true,

	// Floating window for documentation.
	"suggest.floatEnable": true,

	// Don't require specific trigger characters to open completion menu.
	"suggest.autoTrigger": "always",

	// Confirm completion instead of jumping to the next placeholder.
	"suggest.preferCompleteThanJumpPlaceholder": true,

	"suggest.maxCompleteItemCount": 100,

	// Sets CompletionClientCapabilities.completionItem.snippetSupport to false.
	// Some language servers may not listen.
	"suggest.snippetsSupport": false,
	//"coc.preferences.snippets.enable": false, // not needed becauase above?

	// PROBATION: Boost suggestions that appear closer to the cursor position.
	"suggest.localityBonus": true,

	// Require at least 3 characters to open completion menu.
	"suggest.minTriggerInputLength": 3,

	// Use language server provided commit characters to accept completion.
	"suggest.acceptSuggestionOnCommitCharacter": true,

	// set completeopt=noselect
	"suggest.noselect": true,

	// PROBATION:
	"suggest.removeDuplicateItems": true,

	// Enable colors highlight for these filetypes; hopefully that works?
	"colors.filetypes": ["vim", "c", "cpp", "python", "rust"],

	// Consider: diagnostic.displayByAle: true, maybe.

	// TRIAL: if this shows too many things it might be unreadable?
	"diagnostic.checkCurrentLine": true,

	// TRIAL: this may also be unreadable?
	"diagnostic.virtualText": true,
	"diagnostic.virtualTextLevel": "error",
	// If hard to parse, consider diagnostic.virtualTextAlignRight: true

	"diagnostic.separateRelatedInformationAsDiagnostics": true,
	/*"diagnostic.virtualText": true,*/
	/*"diagnostic.virtualTextPrefix": "\\\\ ",*/
	/*"diagnostic.virtualTextCurrentLineOnly": false,*/


	"signature.enable": true,
	"signature.target": "float",
	// Consider: signature.preferShownAbove: false

	"hover.target": "float",
	//"coc.preferences.hoverTarget": "float", // Unnecessary due to above?

	"codeLens.enable": false,

	// TRIAL: not quite sure what this does either.
	"list.menuAction": true,

	// TRIAL: same here.
	"coc.preferences.enableMessageDialog": true,

	"coc.preferences.currentFunctionSymbolAutoUpdate": true,

	// ……Is this different from colors.filetypes???
	"semanticTokens.filetypes": ["vim", "c", "cpp", "python"],



	"vimlsp.trace.server": "messages",

	"git.enableGlobalStatus": true,

	"json.enable": true,
	"json.trace.server": "messages",

	"python.linting.enabled": true,
	"python.linting.pylintUseMinimalCheckers": true,
	"python.linting.pylintEnabled": true,
	"python.linting.pylintArgs": ["--max-line-length", "120", "--max-args", "8", "--extension-pkg-whitelist=PySide2", "--disable=C0326", "--disable=no-else-return"],
	"pyright.trace.server": "messages",
	"python.analysis.useLibraryCodeForTypes": true,
		/*"--variable-rgx=(?P<snake>[a-z_][a-z0-9_]{0,30}$"],*/

	"rust-analyzer.serverPath": "rust-analyzer",
	"rust-analyzer.lens.implementations": false,
	"rust-analyzer.trace.server": "messages",
	"rust-analyzer.procMacro.enable": true,

	"suggest.completionItemKindLabels":
	{
		"variable": "var",
		"function": "fun",
		"method": "meth",
		"module": "mod",
		"value": "val",
		"default": "default",
		"keyword": "key",
		"class": "class",
		"unit": "unit",
		"field": "field",
		"property": "prop",
		"constant": "const",
		"operator": "op",
		"reference": "ref",
		"typeParameter": "type param",
		"text": "text",
		"enum": "enum",
		"file": "file",
		"color": "color",
		"event": "event",
		"folder": "folder",
		"struct": "struct",
		"snippet": "snip",
		"interface": "interface",
		"enumMember": "enum member"
	},

	//"languageserver":
	//{
		//"ccls":
		//{
			//"command": "ccls",
			//"args": ["-v=2"],
			//"filetypes": ["c", "c.doxygen", "cpp"],
			//"rootPatterns": [".ccls", "compile_commands.json", ".git/"],
			//"trace.server": "verbose"
			//[>"initializationOptions":<]
			//[>{<]
				//[>"compilationDatabaseDirectory": "firmware/build"<]
			//[>}<]
		//}
	//},
	"cSpell.dictionaryDefinitions": [
		{
			"name": "custom",
			"path": "~/.config/nvim/custom-en.txt",
		}
	],
	"cSpell.userWords": [
		"Pyright",
		"Sadface",
		"errored",
		"filesize",
		"funcobj",
		"keyleth",
		"prevchunk",
		"struct",
		"subcommand",
		"thiserror"
	],
	"cSpell.dictionaries": [
		"custom",
	],
}
